    #
    # Redirect all www to non-www
    #
    server {
            listen               *:80;
            listen               *:443 ssl http2;
            server_name www.oyzhi.com;
            ssl_certificate ${NGINX_INSTALL_PATH}/nginx/ssl/oyzhi.com.crt;
            ssl_certificate_key ${NGINX_ISNTALL_PATH}/nginx/ssl/oyzhi.com.key;
            access_log off;
            #do not gen log accessing favicon.ico and robots.txt
            location = /favicon.ico {
                root html;
                expires max;
                log_not_found off;
                break;
            }
            location = /robots.txt {
                root html;
                expires max;
                log_not_found off;
                break;
            }
            location / {
                return 301 https://oyzhi.com\$request_uri;
            }
    }
    #
    # Redirect all non-encrypted to encrypted
    #
    server {
            listen               *:80;
            server_name          oyzhi.com;
            access_log off;
            #do not gen log accessing favicon.ico and robots.txt
            location = /favicon.ico {
                root html;
                expires max;
                log_not_found off;
                break;
            }
            location = /robots.txt {
                root html;
                expires max;
                log_not_found off;
                break;
            }
            location / {
                return 301 https://oyzhi.com\$request_uri;
            }
    }
    #
    # HTTPS server
    #
    server {
            listen               *:443 ssl http2;
            server_name          oyzhi.com;
            ssl_certificate /myService/server/nginx/ssl/oyzhi.com.crt;
            ssl_certificate_key /myService/server/nginx/ssl/oyzhi.com.key;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            # proxy to Nodejs listening on 127.0.0.1:8000
            #
            location / {
            proxy_pass   http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host \$host;
            }
    }
